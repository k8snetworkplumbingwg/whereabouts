name: Image push release
on: 
  push:
    tags:
      - v*
env:
  image-push-owner: 'dougbtv'
jobs:
  push-amd64:
    name: Image push/amd64
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        if: github.repository_owner == 'dougbtv'
        uses: docker/login-action@v1
        with:
          #registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          #images: ghcr.io/${{ github.repository }}
          images: dougbtv/whereabouts
          tag-latest: false

      - name: Push container image
        if: github.repository_owner == 'dougbtv'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-amd64
          file: deployments/Dockerfile

  push-arm64:
    name: Image push/arm64
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        if: github.repository_owner == 'dougbtv'
        uses: docker/login-action@v1
        with:
          #registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          #images: ghcr.io/${{ github.repository }}
          images: dougbtv/whereabouts
          tag-latest: false

      - name: Push container image
        if: github.repository_owner == 'dougbtv'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-arm64
          file: deployments/Dockerfile